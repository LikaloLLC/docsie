{"title": {"hash": "ccf1c05b9a8038be010ac9d4f88ae6b2", "content": "Confuso sulla documentazione del prodotto e del software? Non preoccuparti, sono la stessa cosa!"}, "markdown": {"hash": "32be3dc196a92c2b95cf8b125fc59467", "content": "# I team di prodotto e sviluppo condividono lo stesso problema: la documentazione\n\nI team di prodotto e i team di sviluppo software condividono entrambi una sfida comune: la documentazione.\n\nLa documentazione di prodotto si riferisce ai manuali e alle guide rivolte agli utenti che spiegano il flusso di lavoro e l'interfaccia utente di un prodotto. Come pu\u00f2 un utente medio essere produttivo con questo prodotto? In questo senso, la documentazione di prodotto pu\u00f2 essere utilizzata per prodotti software.\n\nLa documentazione software si riferisce alle tecnologie sottostanti, ai prerequisiti e agli attributi configurabili di un prodotto software. Come fanno gli amministratori IT a configurare, monitorare, ospitare e distribuire il prodotto software per gli utenti? Questo tipo di documentazione \u00e8 importante, soprattutto quando entrano in gioco pi\u00f9 versioni o branch.\n\nIn un certo senso, la documentazione di prodotto \u00e8 come insegnare a qualcuno a guidare un'auto. Il volante gira l'auto, l'acceleratore la fa muovere, il pedale del freno la ferma. La documentazione software insegna a qualcuno come funziona l'auto. Il volante \u00e8 collegato all'asse anteriore che gira le ruote anteriori per modificare la direzione di marcia; l'acceleratore aumenta il flusso d'aria al motore che attira pi\u00f9 carburante, generando coppia e potenza.\n\nEntrambi i tipi di documentazione sono importanti. Una educa gli utenti, l'altra educa amministratori e sviluppatori. \u00c8 ottimo mostrare alle persone come guidare un'auto, ma se nessuno sa come funziona, cosa succede quando si guasta?\n\n## Differenze minori tra documentazione di prodotto e software\n\nEsistono alcune differenze da considerare tra la documentazione di prodotto e software:\n\n### Documentazione software e di prodotto: pubblico target e persona\n\nLa documentazione di prodotto si rivolge a un unico pubblico: l'utente. Presuppone che l'utente non abbia conoscenze tecniche, comunicando in linguaggio semplice con minimo gergo tecnico. Come un apprendistato tecnico rispetto a una laurea universitaria, insegna alle persone come fare le cose, con meno enfasi sulla conoscenza teorica o concettuale.\n\nLa documentazione software \u00e8 destinata ad amministratori IT, ingegneri e sviluppatori. Copre il design e l'architettura del software, istruzioni di configurazione da riga di comando, supporto API e integrazione, gestione dati e reportistica, topologia di rete \u2013 fondamentalmente gli ingranaggi che fanno funzionare la macchina. Questi documenti costituiscono una fonte unica di verit\u00e0 (SSOT) a cui il personale IT pu\u00f2 fare riferimento durante il monitoraggio e la risoluzione dei problemi dell'applicazione software.\n\n### Documentazione software e di prodotto: frequenza di aggiornamento\n\nLa documentazione software deve essere costantemente aggiornata quando nuovi commit vengono uniti al canale di rilascio principale. La documentazione software deve evidenziare nuove funzioni e comandi, e deprecare le vecchie funzionalit\u00e0. Nuove dipendenze o modifiche dovrebbero essere documentate, e il supporto delle funzionalit\u00e0 su tutte le piattaforme target dovrebbe essere chiarito \u2013 come una funzionalit\u00e0 che funziona su Windows, ma non su Linux.\n\nLa documentazione di prodotto necessita di aggiornamenti solo quando le modifiche al software sottostante provocano un cambiamento nel flusso di lavoro o nell'usabilit\u00e0. Se uno sviluppatore modifica il codice per un gateway di pagamento, ma il processo di pagamento per gli utenti rimane lo stesso, non sono necessari aggiornamenti.\n\nQuesto mostra una gerarchia naturale per la documentazione del prodotto software. La documentazione tecnica del software costituisce la base, e la successiva documentazione di prodotto si basa su questo fondamento. Pertanto, l'attenzione dovrebbe essere rivolta alla creazione di un'ottima documentazione software, poich\u00e9 genera una documentazione di prodotto ancora migliore.\n\n## Esempi di framework di formattazione per documentazione di prodotto e software\n\nUna documentazione di prodotto potrebbe seguire questo framework:\n\n* *Nome del prodotto*\n* *Panoramica dello scopo del prodotto*\n* *Guida alla configurazione*\n* *Spiegazione e immagini della funzionalit\u00e0 1*\n* *Spiegazione e immagini della funzionalit\u00e0 2*\n* *Link di supporto clienti*\n\nAnalogamente, una documentazione software potrebbe seguire questo framework:\n\n* *Nome del software*\n* *Panoramica dello scopo del software*\n* *Dipendenze software*\n* *Guida all'installazione*\n* *Spiegazione e immagini della funzione 1*\n* *Spiegazione e immagini della funzione 2*\n* *Link di supporto tecnico*\n\nChiaramente, questi due tipi di documentazione sono strettamente correlati tra loro e seguono una struttura simile. Questo significa che i team di prodotto e software hanno molto da imparare l'uno dall'altro e hanno un grande potenziale quando collaborano sulla documentazione.\n\n## I team di documentazione di prodotto e software possono completarsi a vicenda\n\nCi sono forti somiglianze tra la documentazione di prodotto e software. Questo solleva la domanda: i team di prodotto e software possono lavorare insieme?\n\nS\u00ec, possono, e dovrebbero!\n\nI team software comprendono il gergo tecnico e le tecnologie sottostanti. I team di prodotto comprendono ci\u00f2 che gli utenti vedono, vogliono e di cui hanno bisogno; l'esperienza utente. Gli scrittori di documentazione software possono fornire informazioni tecniche dettagliate, e gli scrittori di documentazione di prodotto possono semplificare i dettagli tecnici per il consumo da parte di un pubblico non esperto.\n\nImmagina di provare a spiegare qualcosa in termini semplici, senza avere la comprensione di alto livello necessaria per formulare qualcosa che una persona comune capirebbe. Questo \u00e8 ci\u00f2 che accade quando la documentazione di prodotto viene creata prima della documentazione software.\n\nCos'\u00e8 la meccanica quantistica? Il gatto di Schr\u00f6dinger \u00e8 probabilmente il primo pensiero che ti viene in mente! Ma cosa c'entrano i gatti con la meccanica quantistica? Per l'utente, non \u00e8 importante. Per un fisico, significa tutto.\n\n## Inizia con la documentazione software, finisci con una migliore documentazione di prodotto in Docsie\n\nPer concludere, ci sono molti vantaggi nell'utilizzare la documentazione software come modello per la successiva documentazione di prodotto. La documentazione software dovrebbe fungere da fonte unica di verit\u00e0 per il personale IT e gli scrittori di documentazione di prodotto. Dopo che \u00e8 stata scritta, gli autori della documentazione di prodotto avranno la chiarezza e la comprensione necessarie per semplificare e condividere conoscenze facili da usare con i clienti, con una guida tecnica per la revisione e il controllo qualit\u00e0.\n\nSemplicemente, iniziando con un'ottima documentazione software, i tuoi scrittori possono creare una documentazione di prodotto ancora migliore!\n\nInizia a creare documentazione che aiuti i tuoi clienti a fare di pi\u00f9. Iscriviti al [nostro piano Startup](https://www.docsie.io/pricing/) [(gratis per sempre!)](https://www.docsie.io/pricing/) e offri la gioia della documentazione con Docsie!"}, "summary": {"hash": "2e1986c64960f999bde7c3cc5e04c653", "content": "La documentazione del software e del prodotto possono sembrare diverse a prima vista, ma condividono pi\u00f9 somiglianze di quanto si pensi!"}, "categories": {"hash": "1483142d8732010e2bbe2a6f52d2b278", "content": ["Product Documentation", "Product Management", "Documentation Portals", "Product Updates", "Best Practices", "Technical Writing", "API Documentation", "Product Documentation Tutorials"]}, "is_legacy": {"hash": "f8320b26d30ab433c5a54546d21f414c", "content": false}}