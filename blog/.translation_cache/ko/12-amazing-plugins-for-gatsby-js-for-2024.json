{
    "__metadata__": {
        "original_categories": [
            "Technical Writing",
            "Gatsby Extension"
        ],
        "author_name": "Tanya A Mishra",
        "author_email": "tanya@docsie.io",
        "author_info": "A B2B & B2C writer and an editor, \"All Ghillied Up\" to take on distinct hurdles with over 5 years of experience in curating influential product writing.",
        "author_image": "https://cdn.docsie.io/workspace_PfNzfGj3YfKKtTO4T/doc_QiqgSuNoJpspcExF3/file_p1X4gXS3n0rCHYuaE/1f3f5f57-d8e2-7978-faef-0b9fe89f3e4btanya_pic.jpg",
        "header_image": "https://cdn.docsie.io/workspace_PfNzfGj3YfKKtTO4T/doc_QiqgSuNoJpspcExF3/file_v7wI6BClWfJ4u3L89/acbd1245-5505-1fc0-da96-bf9b5c06740ebanner_13_1.jpg",
        "timestamp": "2023-09-04T09:10:14+00:00",
        "status": 1
    },
    "12-amazing-plugins-for-gatsby-js-for-202|title": "2024년을 위한 Gatsby.js를 위한 12가지 놀라운 플러그인",
    "12-amazing-plugins-for-gatsby-js-for-202|summary": "이 글에서는 몇 가지 인기 있는 플러그인에 대해 논의하고 이를 사용하는 방법에 대한 몇 가지 통찰력을 제공하고자 합니다.",
    "12-amazing-plugins-for-gatsby-js-for-202|markdown": "# 개츠비: 빠른 속도와 유연성을 제공하는 플러그인 생태계\n\n개츠비는 리액트를 기반으로 하고 GraphQL로 구동되는 매우 빠른 정적 사이트 생성기입니다. 개츠비 사이트가 놀라울 정도로 빠르고 유연한 이유 중 하나는 플러그인 생태계입니다. 개츠비 플러그인은 기능을 확장하고 사이트를 맞춤화하기 위해 개츠비 API를 구현하는 NPM 패키지입니다. 이 글에서는 이미지 최적화, 오프라인 지원, 스타일링, 메타데이터 관리 등을 위한 가장 인기 있고 유용한 개츠비 플러그인을 살펴보겠습니다.\n\n[HubSpot](https://blog.hubspot.com/marketing/page-load-time-conversion-rates)에 따르면, 사용자의 70%는 빠르게 로딩되는 웹사이트를 가진 회사에서 구매할 가능성이 높습니다. 이는 웹사이트 로딩 시간이 너무 오래 걸리면 사용자들이 이탈할 가능성이 크다는 의미입니다. 개츠비 플러그인 아키텍처를 통해 거의 모든 자바스크립트 라이브러리나 웹 기능을 활용하도록 사이트를 조정할 수 있습니다. 플러그인을 조합함으로써 필요에 맞게 개츠비 사이트를 구축하고 리액트와 현대적인 웹 기술의 성능과 기능을 활용할 수 있습니다.\n\n이 글에서는 인기 있는 플러그인들을 살펴보고 사용 방법에 대한 인사이트를 제공하겠습니다.\n\n## 가장 인기 있는 개츠비 플러그인은 무엇인가요?\n\n*다음은 인기 있는 개츠비 테마 및 플러그인입니다:*\n\n1. [Gatsby-plugin-image:](https://www.gatsbyjs.com/plugins/gatsby-plugin-image/) 이미지 컴포넌트의 반응성을 향상시켜 웹사이트 성능을 높이는 플러그인입니다.\n\n2. [Gatsby-plugin-sharp:](https://www.gatsbyjs.com/plugins/gatsby-plugin-sharp/) 이미지 처리와 최적화를 담당하며 웹사이트 성능을 크게 향상시키는 플러그인입니다.\n\n3. [Gatsby-plugin-manifest:](https://www.gatsbyjs.com/plugins/gatsby-plugin-manifest/) 프로그레시브 웹 앱(PWA)을 위한 웹 앱 매니페스트를 생성할 수 있게 해주어 모바일 사용자 경험을 향상시킵니다.\n\n4. [Gatsby-plugin-offline:](https://www.gatsbyjs.com/plugins/gatsby-plugin-offline/) 네트워크 다운타임 동안 오프라인 지원과 서비스 워커를 추가하여 원활한 사용자 경험을 보장합니다.\n\n5. [Gatsby-plugin-react-helmet:](https://www.gatsbyjs.com/plugins/gatsby-plugin-react-helmet/) 문서의 헤드에 중요한 메타데이터를 처리하여 검색 엔진을 위한 콘텐츠 최적화를 담당합니다.\n\n6. [Gatsby-plugin-sitemap:](https://www.gatsbyjs.com/plugins/gatsby-plugin-sitemap/) 검색 엔진 가시성을 위한 SEO 사이트맵 생성 과정을 간소화합니다.\n\n7. [Gatsby-plugin-styled-components:](https://www.gatsbyjs.com/plugins/gatsby-plugin-styled-components/) CSS-in-JS 접근 방식을 지원하여 우아한 웹사이트 레이아웃을 구현하는 데 핵심 역할을 합니다.\n\n8. [Gatsby-source-filesystem:](https://www.gatsbyjs.com/plugins/gatsby-source-filesystem/) 시스템 파일을 활용하여 GraphQL 데이터를 원활하게 구성하는 효율적인 데이터 관리 플러그인입니다.\n\n9. [Gatsby-transformer-remark:](https://www.gatsbyjs.com/plugins/gatsby-transformer-remark/) Remark의 기능을 활용하여 마크다운 파일을 HTML로 변환함으로써 웹사이트 구축과 관리를 간소화합니다.\n\n10. [Gatsby-plugin-google-analytics:](https://www.gatsbyjs.com/plugins/gatsby-plugin-google-analytics/) Google Analytics를 사용하여 웹사이트 성능에 대한 인사이트를 제공하는 필수적인 플러그인입니다.\n\n11. [Gatsby-theme-docz:](https://www.docz.site/docs/gatsby-theme) 개츠비 사이트를 위한 포괄적인 문서 작성을 단순화하여 사용자 온보딩을 촉진합니다.\n\n12. [Docsie-gatsby-plugin:](https://www.docsie.io/blog/gatsby_js_as_a_blog/?version=0.0.1&language=EN&article=gatsbyjs-general-components-and-enhancementss_xgxf) 웹사이트 문서 작성 과정을 간소화하고 Docsie 작업 공간에서 데이터를 쉽게 가져옵니다.\n\n## gatsby-plugin-docsie를 사용하여 개츠비로 문서 웹사이트를 구축하는 방법은?\n\n이 플러그인은 GatsbyJs 웹사이트에 Docsie 콘텐츠를 추가합니다. 자동으로 페이지를 생성하거나 페이지 생성을 더 세밀하게 제어하기 위해 직접 GraphQL을 쿼리할 수 있습니다.\n\n### gatsby-plugin-docsie 사용 방법\n\n```\n`{\n  resolve: require.resolve(`gatsby-source-docsie`),\n  options: {\n          deploymentId: \"deployment_iigwE2dX4i7JVKmce\", [required]\n        generatePages: true, [optional, defaults to true]\n        path: \"docs\", [optional, root path for slugs of all nodes, no slashes needed, defaults to docs]\n        language: \"English\", [optional, if not provided defaults to primary language]\n  }\n}`\n```\n\n### 페이지 생성 기능이 있는 gatsby-plugin-docsie 사용하기\n\n기본적으로 플러그인은 페이지를 자동 생성합니다.\n\n*다음 CSS 클래스를 사용하여 기본 페이지 스타일을 지정할 수 있습니다:*\n\n* .docsie-main-container\n* .docsie-nav-container\n* .docsie-page-container\n* .docsie-nav\n* .docsie-nav-items\n* .docise-nav-item\n\n### 페이지 생성 기능 없이 gatsby-plugin-docsie 사용하기\n\n콘텐츠 생성 방식에 더 많은 제어가 필요한 경우, 위의 `generatePages`를 `false`로 설정하고 GraphQL을 사용하여 GatsbyJs에서 직접 데이터를 가져올 수 있습니다.\n\n*이 플러그인은 GatsbyJs에 4개의 GraphQL 노드를 추가합니다:*\n\n* DociseDoc\n* DociseBook\n* DocsieArticle\n* DocsieNav\n\n페이지 생성 방법 예시는 [/plugin/createPages.js](https://github.com/tjbo/gatsby-source-docsie/blob/main/plugin/createPages.js)에서 확인할 수 있으며, [/plugin/DocsieTemplate.js](https://github.com/tjbo/gatsby-source-docsie/blob/main/plugin/DocsieTemplate.js)에서 React 컴포넌트 구축 방법 예시를 확인할 수 있습니다.\n\n## gatsby-plugin-manifest를 사용하여 웹 앱 매니페스트를 구성하는 방법은?\n\ngatsby-plugin-manifest 플러그인을 사용하면 개츠비 사이트를 위한 웹 앱 매니페스트를 쉽게 구성하고 생성할 수 있습니다. 웹 앱 매니페스트는 이름, 아이콘, 시작 URL, 색상 등 웹 앱에 대한 메타데이터를 제공하는 JSON 파일입니다. 이를 통해 사이트를 모바일 기기의 홈 화면 아이콘이 있는 프로그레시브 웹 앱으로 설치할 수 있습니다.\n\n*gatsby-plugin-manifest를 사용하려면 먼저 플러그인을 설치하세요:*\n\n```\n`npm install --save gatsby-plugin-manifest`\n```\n\n그런 다음 gatsby-config.js 파일에서 플러그인을 구성합니다. name, short_name, start_url, background_color, theme_color, display, icons 등의 속성을 지정할 수 있습니다. 예를 들면:\n\n```\n`{\n  resolve: `gatsby-plugin-manifest`,\n  options: {\n    name: `GatsbyJS`,\n    short_name: `GatsbyJS`,\n    start_url: `/`,\n    background_color: `#f7f0eb`,\n    theme_color: `#a2466c`,\n    display: `standalone`,\n    icon: 'src/images/icon.png'\n  }\n}`\n```\n\n이렇게 하면 개츠비 사이트를 빌드할 때 manifest.webmanifest 파일이 생성됩니다. 다음과 같이 사이트의 HTML 템플릿에서 매니페스트를 참조해야 합니다:\n\n```\n`<link rel=\"manifest\" href=\"/manifest.webmanifest\">`\n```\n\n*gatsby-plugin-manifest 구성 시 주요 고려사항:*\n\n* short_name은 홈 화면에 표시되는 이름을 위한 필수 속성입니다.\n* start_url은 기기 홈 화면에서 앱을 실행할 때의 시작 페이지를 구성합니다.\n* icon은 최소 512x512px 크기의 정사각형 png 파일을 가리켜야 합니다.\n* 다양한 크기/밀도에 대한 아이콘 객체 배열을 구성할 수 있습니다.\n* display를 통해 앱이 전체 화면(standalone)으로 실행되는지 브라우저 탭(browser)으로 실행되는지 지정할 수 있습니다.\n* theme_color와 background_color는 앱의 색상 구성표를 정의합니다.\n\n전반적으로 gatsby-plugin-manifest는 개츠비 사이트를 PWA로 설치 가능하게 만드는 데 필요한 매니페스트 파일을 쉽게 구성하고 생성할 수 있게 해줍니다. 이는 모바일 경험을 개선하고 사용자가 네이티브 앱처럼 사이트를 실행할 수 있게 합니다.\n\n## gatsby-plugin-offline란 무엇이며 오프라인 지원 사이트를 만드는 방법은?\n\ngatsby-plugin-offline는 오프라인 지원 웹사이트 생성을 위한 개츠비 플러그인입니다. 프로그레시브 웹 앱 구축을 쉽게 만들어주는 라이브러리와 빌드 도구 세트인 Workbox를 사용합니다.\n\n*올바르게 설치 및 구성되면 gatsby-plugin-offline는 다음과 같은 기능을 제공합니다:*\n\n* **HTML, JavaScript, CSS, 미디어** 및 **웹 폰트**와 같은 앱 셸 리소스를 캐싱하는 서비스 워커 파일을 생성합니다. 이를 통해 반복 방문 시 사이트 로딩 속도가 빨라집니다.\n* 사이트가 오프라인에서도 접근 가능하도록 페이지 데이터를 캐싱합니다. 플러그인은 사용자가 방문하는 페이지를 캐싱합니다.\n* \"홈 화면에 추가\" 설치를 위한 매니페스트 지원을 추가합니다.\n\n사용하려면 먼저 플러그인을 설치하세요:\n\n```\n`npm install gatsby-plugin-offline`\n```\n\n그런 다음 gatsby-config.js에 추가하세요:\n\n```\n`{\n  resolve: `gatsby-plugin-offline`,\n  options: {\n    precachePages: [`/about/`],\n  },\n}`\n```\n\n*주요 옵션은 다음과 같습니다:*\n\n* precachePages - 오프라인 지원을 위해 미리 캐싱할 페이지를 지정합니다. 여기에 홈 페이지를 포함하는 것이 중요합니다.\n* workboxConfig - 런타임 캐싱 및 매니페스트 설정과 같은 Workbox 옵션을 사용자 정의합니다.\n* appendScript - 생성된 서비스 워커 파일에 사용자 정의 서비스 워커 코드를 삽입합니다.\n\n*gatsby-plugin-offline 사용 모범 사례:*\n\n* Chrome DevTools Audits 패널로 사이트를 테스트하여 초기 문제를 발견하세요.\n* API 데이터와 자주 업데이트되는 자산에 대해 짧은 캐시 만료 시간을 설정하세요.\n* 사용자가 최신 파일을 받을 수 있도록 Workbox에서 \"Update on reload\" 옵션을 선택하세요.\n* 서비스 워커 수명 주기를 제어하기 위해 gatsby-browser.js에 서비스 워커를 등록하세요.\n* 사용자가 연결이 없을 때를 위한 대체 페이지나 오프라인 UI를 구성하는 것을 고려하세요.\n\n**강조된 텍스트** PWA 점수를 벤치마킹하기 위해 라이브 사이트를 Lighthouse에 제출하세요. 90점 이상을 목표로 하세요.\n\n전반적으로 gatsby-plugin-offline는 개츠비 사이트를 오프라인에서도 작동하게 만드는 간단한 방법을 제공합니다. 이는 재방문하거나 인터넷 연결이 끊긴 사용자에게 훨씬 더 나은 앱과 같은 경험을 제공합니다. 브라우저와 기기 전반에 걸쳐 정기적으로 테스트하여 완전한 오프라인 지원을 보장하세요.\n\n## gatsby-plugin-google-analytics를 사용하여 개츠비 사이트에 Google Analytics를 구현하는 방법은?\n\nGoogle Analytics는 웹사이트의 트래픽과 참여도를 모니터링하고 추적할 수 있는 인기 있는 분석 도구입니다. gatsby-plugin-google-analytics는 개츠비 사이트에 Google Analytics를 통합하는 권장 방법입니다.\n\n*Google Analytics 지원을 추가하려면 먼저 플러그인을 설치하세요:*\n\n```\n`npm install --save gatsby-plugin-google-analytics`\n```\n\n그런 다음 gatsby-config.js에서 Google Analytics 추적 ID를 지정하여 구성합니다:\n\n```\n`{\n  resolve: `gatsby-plugin-google-analytics`,\n  options: {\n    trackingId: 'YOUR_GOOGLE_ANALYTICS_TRACKING_ID',\n  },\n}`\n```\n\n이렇게 하면 사이트의 모든 페이지에 필요한 Google Analytics 추적 코드가 자동으로 추가됩니다.\n\n추가 구성 옵션은 다음과 같습니다:\n\n* head - <head>에 추가 스크립트를 추가할 수 있습니다. 추가 분석 도구에 유용합니다.\n* anonymize - GDPR을 준수해야 하는 경우 IP 주소를 마스킹합니다.\n* respectDNT - 사용자가 \"추적 안 함\"을 활성화한 경우 GA를 로드하지 않습니다.\n* pageTransitionDelay - 페이지 변경 분석 이벤트에 대한 타임아웃을 설정합니다.\n* optimizeId - A/B 테스트를 위한 Google Optimize를 활성화합니다.\n* experimentId - Google Optimize 실험 ID를 추가합니다.\n* variationId - Google Optimize 실험 변형을 지정합니다.\n* defer - 페이지 속도를 향상시키기 위해 스크립트 로딩을 지연시킵니다.\n* sampleRate - 샘플링 비율을 설정합니다. 트래픽이 많은 사이트에 유용합니다.\n\n사이트를 테스트하여 Google Analytics 이벤트가 문제 없이 수신되는지 확인할 수 있습니다. Google Analytics에서 페이지뷰와 같은 데이터를 확인하세요. GA Debugger 애드온을 사용하여 사이트에서 추적 코드가 로드되고 있는지 확인할 수 있습니다.\n\ngatsby-plugin-google-analytics를 사용하면 개츠비 사이트에 강력한 분석 기능을 쉽게 추가할 수 있습니다. 개츠비의 코드 분할과 서버 사이드 렌더링은 Google Analytics를 통합하는 데 이상적입니다. 사이트가 지원하는 모든 페이지와 기기에서 올바르게 표시되는지 확인하세요.\n\n## gatsby-plugin-react-helmet이란 무엇이며 문서 헤드 메타데이터를 관리하는 방법은?\n\ngatsby-plugin-react-helmet을 사용하면 React Helmet을 사용하여 개츠비 사이트의 문서 헤드 메타데이터를 관리할 수 있습니다. React Helmet은 문서 헤드에서 제목, 메타 태그, 스크립트 등의 요소를 제어할 수 있게 해주는 컴포넌트입니다.\n\n*gatsby-plugin-react-helmet을 사용해야 하는 이유:*\n\n* SEO를 위한 페이지 제목, 설명, 표준 URL, JSON-LD 등을 쉽게 설정할 수 있습니다.\n* props, 쿼리 등을 기반으로 메타 태그를 동적으로 생성할 수 있습니다.\n* 소셜 공유를 위한 og:image, twitter:card 메타 태그를 설정할 수 있습니다.\n* 다른 페이지에 영향을 주지 않고 헤드에 서드파티 스크립트를 안전하게 추가할 수 있습니다.\n* 개츠비의 서버 사이드 렌더링과 완벽하게 작동합니다.\n\n*사용하려면 먼저 플러그인을 설치하세요:*\n\n```\n`npm install --save gatsby-plugin-react-helmet react-helmet`\n```\n\n그런 다음 페이지를 <Helmet> 컴포넌트로 감싸서 메타데이터를 추가합니다:\n\n```\n`import React from \"react\"\nimport { Helmet } from \"react-helmet\"\n\nexport default () => (\n  <div>\n    <Helmet>\n      <title>My Title</title>\n      <meta name=\"description\" content=\"My description\" />\n    </Helmet>\n  </div>\n)`\n```\n\n한 페이지에 여러 <Helmet> 인스턴스를 포함할 수 있습니다.\n\n참고사항:\n\n* Helmet은 페이지, 템플릿, 컴포넌트에서 사용하세요. gatsby-browser.js에서는 사용하지 마세요.\n* Helmet은 중복 태그를 덮어쓰지 않고 병합합니다.\n* 서버 렌더링된 HTML에는 헤드 메타데이터가 올바르게 포함됩니다.\n* 클라이언트 렌더링된 HTML에도 메타데이터가 포함됩니다.\n* 각 페이지에 대한 동적으로 생성된 제목, 설명, 표준 URL에 이상적입니다.\n\n전반적으로 gatsby-plugin-react-helmet은 SEO, 소셜 공유, UI 제어를 위한 문서 헤드 메타데이터에 대한 큰 제어력을 제공합니다. 모든 개츠비 사이트에 강력히 권장됩니다. 서버 렌더링이 작동하지 않는 gatsby-browser.js와 같은 잘못된 위치에 포함하지 않도록 주의하세요.\n\n## gatsby-plugin-sitemap을 사용하여 개츠비 사이트의 사이트맵을 구현하는 방법은?\n\n사이트맵은 사이트의 페이지를 나열하는 XML 파일로, Google 및 Bing과 같은 검색 엔진이 콘텐츠를 더 효율적으로 크롤링하고 인덱싱하는 데 도움을 줍니다. gatsby-plugin-sitemap은 개츠비 사이트에 사이트맵을 생성하는 가장 쉬운 방법입니다.\n\n사이트맵을 추가하려면 먼저 플러그인을 설치하세요:\n\n```\n`npm install --save gatsby-plugin-sitemap`\n```\n\n그런 다음 gatsby-config.js에 추가하세요:\n\n```\n`{\n  resolve: `gatsby-plugin-sitemap`,\n  options: {\n    output: `/sitemap.xml`,\n  },\n}`\n```\n\n이렇게 하면 사이트의 루트 폴더에 sitemap.xml 파일이 생성됩니다.\n\n*몇 가지 옵션을 지정할 수 있습니다:*\n\n* output - 사이트맵 파일을 저장할 위치입니다.\n* exclude - 사이트맵에서 제외할 경로 배열입니다.\n* query - 포함할 노드를 필터링하는 GraphQL 쿼리입니다.\n* serialize - 사이트맵의 각 URL 형식을 지정하는 사용자 정의 함수입니다.\n\n이 플러그인은 개츠비 노드에서 생성된 모든 페이지를 자동으로 크롤링하여 포함시킵니다.\n\n*최적의 사용을 위한 팁:*\n\n* 인덱싱을 위해 Google Search Console에 사이트맵을 제출하세요.\n* 사이트맵을 업데이트할 때마다 검색 엔진에 핑을 보내세요.\n* sitemapSize 옵션을 사용하여 적절한 사이트맵 캐시 시간을 설정하세요.\n* 사용자 프로필 페이지와 같이 인덱싱하지 않으려는 페이지를 제외하세요.\n* URL이 5만 개를 초과하는 경우 대규모 사이트맵을 제한하기 위해 exclude 또는 query를 사용하세요.\n* robots.txt 파일에 사이트맵 URL을 추가하세요.\n* 더 빠른 인덱싱을 위해 gzip을 사용하여 사이트맵을 압축하세요.\n* 최신 상태를 유지하기 위해 빌드 시간에 사이트맵 데이터를 동적으로 생성하세요.\n\n전반적으로 gatsby-plugin-sitemap은 개츠비 사이트의 검색 엔진 가시성과 크롤링 효율성을 향상시키기 위한 포괄적인 사이트맵을 생성하는 쉬운 방법을 제공합니다. 사용 사례에 맞게 옵션을 사용자 정의하고 최대 SEO 가치를 위해 검색 엔진에 제출하세요.\n\n## gatsby-plugin-styled-components를 사용하여 개츠비에서 styled-components를 추가하는 방법은?\n\nStyled-components는 템플릿 리터럴을 사용하여 컴포넌트 범위의 CSS를 작성할 수 있게 해주는 인기 있는 CSS-in-JS 라이브러리입니다. gatsby-plugin-styled-components는 개츠비 사이트에 styled-components 지원을 추가하는 권장 방법입니다.\n\n*개츠비에서 styled-components를 사용하려면 먼저 종속성을 설치하세요:*\n\n```\n`npm install --save gatsby-plugin-styled-components styled-components babel-plugin-styled-components`\n```\n\n그런 다음 gatsby-config.js에 플러그인을 추가하세요:\n\n```\n`module.exports = {\n  plugins: [\n    `gatsby-plugin-styled-components`, \n  ],\n}`\n```\n\n이제 사이트 어디서나 styled-components를 가져와 스타일이 지정된 요소를 만들 수 있습니다:\n\n```\n`import styled from 'styled-components';\n\nconst Header = styled.header`\n  background: red; \n  color: white;\n`;`\n```\n\n***개츠비에서 styled-components를 사용하는 이점:***\n\n* 범위가 지정된 CSS는 충돌과 특이성 문제를 방지합니다.\n* 테마, 믹스인, 중첩과 같은 CSS-in-JS 기능과 함께 작동합니다.\n* React 컴포넌트 아키텍처와 원활하게 통합됩니다.\n* 재사용 가능한 스타일 컴포넌트를 만들 수 있습니다.\n* SSR 지원 - 중요한 CSS가 생성됩니다.\n* 스타일을 쉽게 사용자 정의하고 확장할 수 있습니다.\n* CSS 가져오기로 인한 원치 않는 코드 분할을 방지합니다.\n\n***styled-components 사용 시 모범 사례:***\n\n* TypeScript 오류를 피하기 위해 // @ts-ignore 주석을 사용하세요.\n* 명명된 내보내기 규칙을 활성화하세요.\n* DOM에 전달되는 props를 제한하려면 shouldForwardProp을 사용하세요.\n* 필요한 경우 labelFormat을 사용자 정의하세요.\n* 약간 더 나은 성능을 위해 emotion을 고려하세요.\n\n전반적으로 gatsby-plugin-styled-components는 styled-components CSS-in-JS 라이브러리를 사용하기 위해 개츠비의 빌드 프로세스와 우수한 통합을 가능하게 합니다. React 및 SSR과 잘 어울리는 컴포넌트 지향 스타일링을 위한 훌륭한 옵션입니다.\n\n## gatsby-plugin-sharp란 무엇이며 개츠비에서 이미지를 처리하는 데 어떻게 도움이 되나요?\n\ngatsby-plugin-sharp는 Sharp 이미지 조작 라이브러리를 사용하여 이미지 처리 및 최적화를 처리하는 공식 개츠비 플러그인입니다. 정적 사이트 및 개츠비 앱에서 이미지 파일을 변환할 수 있습니다.\n\n*gatsby-plugin-sharp가 제공하는 주요 기능:*\n\n* 반응형 디자인을 위한 이미지 크기 조정. 이미지에 대한 크기 세트를 정의하면 gatsby-plugin-sharp가 자동으로 적절한 크기의 버전을 생성합니다.\n* 이미지 자르기 및 일부분 선택. 주요 영역에 초점을 맞추고 썸네일을 생성하는 데 유용합니다.\n* **JPEG, PNG, WebP** 및 **GIF**와 같은 이미지 유형 간의 형식 변환. 이는 파일 크기와 품질을 최적화하는 데 도움이 됩니다.\n* 이미지에 워터마크 및 오버레이 적용.\n* 이미지 파일 크기를 줄이기 위한 압축, 품질, 메타데이터 최적화.\n* 성능을 위해 빌드 시간에 gatsby-transformer-sharp 플러그인 및 GraphQL 쿼리를 사용하여 이미지 처리.\n* Gatsby Image 및 gatsby-image 플러그인과의 통합을 통한 지연 로딩 지원.\n* JPEG, PNG, TIFF, GIF, SVG와 같은 일반적인 이미지 형식을 허용합니다.\n* 로컬 및 원격으로 호스팅된 이미지를 처리할 수 있습니다.\n\ngatsby-plugin-sharp가 작동하려면 gatsby-plugin-sharp 및 gatsby-transformer-sharp 플러그인을 설치하고 gatsby-config.js에 포함시키세요. 그런 다음 GraphQL 쿼리를 통해 고정, 유동적 또는 반응형 해상도별로 필터링하거나 다른 속성으로 처리된 이미지를 적용할 수 있습니다.\n\n요약하면, gatsby-plugin-sharp는 Sharp를 통해 강력한 이미지 처리 리소스를 제공하여 성능과 반응성을 향상시킬 수 있습니다. 개츠비는 이미지 처리 파이프라인에서 이를 많이 사용합니다. 전문적이고 고성능 웹사이트를 개발하기 위해 다양한 이미지 처리 기능을 실험해 보세요.\n\n## gatsby-theme-docz를 사용하여 개츠비로 문서화 웹사이트를 구축하는 방법은?\n\ngatsby-theme-docz는 MDX와 React 컴포넌트를 사용하여 문서 웹사이트를 구축하는 데 도움을 주는 공식 개츠비 테마입니다. 기술 문서 작성을 위한 툴킷인 Docz와 통합됩니다.\n\n*gatsby-theme-docz의 주요 기능:*\n\n* MDX로 문서 작성 - 마크다운 구문과 JSX 컴포넌트를 결합합니다.\n* Theme UI 지원 - 제약 기반 디자인 시스템으로 스타일링합니다.\n* Prism.js를 통한 코드 블록 렌더링 - 구문 강조 표시.\n* 반응형 모바일 친화적 레이아웃.\n* 핫 모듈 교체로 실시간 새로고침.\n* react-helmet을 통한 SEO 최적화.\n* 중첩된 경로로 구성된 문서.\n* 사이드바 탐색 생성.\n* 문서 콘텐츠 빠른 검색.\n* 다크 모드 지원.\n* 사용자 정의 가능한 레이아웃 및 컴포넌트.\n\n*gatsby-theme-docz를 사용하려면:*\n\n1. 테마 및 Docz 종속성을 설치합니다.\n2. gatsby-config.js에 gatsby-theme-docz 구성을 추가합니다.\n3. src/pages에서 MDX를 사용하여 문서를 만듭니다.\n4. 컴포넌트를 섀도잉하여 테마를 사용자 정의합니다.\n5. 문서 사이트를 배포합니다.\n\n리액트와 마크다운과 같은 친숙한 도구를 사용하여 기술 및 컴포넌트 문서를 작성하기 위한 훌륭한 개발자 경험을 제공합니다. 그리고 개츠비 사이트를 생성한다는 것은 문서가 사전 렌더링과 같은 개츠비의 모든 성능과 기능을 얻는다는 것을 의미합니다.\n\n전반적으로 gatsby-theme-docz는 개츠비의 속도와 리액트 컴포넌트 아키텍처를 활용하는 문서 웹사이트를 생성하는 간단한 방법을 제공합니다. 기술 컴포넌트 라이브러리와 API를 작성하는 개발자에게 이상적입니다.\n\n## gatsby-theme-docz를 어떻게 사용자 정의하고 구성할 수 있나요?\n\ngatsby-theme-docz 테마는 문서화 요구에 맞게 스타일, 레이아웃, 컴포넌트 및 동작을 사용자 정의할 수 있는 다양한 옵션을 제공합니다.\n\n*gatsby-theme-docz를 구성하고 사용자 정의하는 주요 방법:*\n\n* gatsby-config.js에서 themeConfig 설정 - 색상, 글꼴, 스타일을 변경합니다.\n* docz 컴포넌트 섀도잉 - src/gatsby-theme-docz/에 대체물을 배치하여 내부 컴포넌트를 재정의합니다.\n* 사용자 정의 문서 레이아웃 - docz/Wrapper.js 레이아웃 컴포넌트를 섀도잉합니다.\n* MDX 컴포넌트 추가 - MDX에서 사용할 수 있는 컴포넌트를 가져오고 등록합니다.\n* 사이드바 내비게이션 수정 - 링크 및 구조를 조정합니다.\n* 사용자 정의 테마 - themeConfig에 Theme UI 테마 객체를 전달합니다.\n* 전역 CSS 추가 - gatsby-browser.js에서 CSS 파일을 가져옵니다.\n* 플러그인 옵션 - 플러그인을 구성할 때 docgenConfig와 같은 옵션을 설정합니다.\n* 사용자 정의 인덱스 페이지 - 인덱스 MDX 페이지를 섀도잉합니다.\n* 페이지 메타데이터 변경 - MDX 페이지에서 frontmatter를 설정합니다.\n* 헤더/푸터 추가 - docz/Layout 래퍼 컴포넌트를 사용합니다.\n* 인증 통합 - 인증 제공자 구성을 전달하고 경로를 래핑합니다.\n* Algolia 통합 - Docz algolia 플러그인으로 검색을 활성화합니다.\n* 사용자 정의 404 페이지 - 404.mdx 페이지를 만듭니다.\n* GitHub Pages에 배포 - gatsby-config.js에서 pathPrefix를 사용합니다.\n* 확장된 마크다운 기능 - Markdown-it 플러그인을 추가합니다.\n* Prism 테마 수정 - themeConfig에 prismTheme을 전달합니다.\n\n전반적으로 gatsby-theme-docz는 문서 사이트 요구에 맞게 사용자 정의할 수 있도록 설계되었습니다. 컴포넌트 섀도잉 및 레이아웃 래핑과 같은 확장 지점을 활용하여 개츠비와 MDX를 사용하여 세련된 문서 경험을 만드세요.\n\n## Gatsby.Js와 Docsie.io 통합하기\n\nDocsie.io는 모든 기업 문서화 요구를 지원하는 플랫폼입니다. 다양한 도구가 필요 없이 모든 작업을 한 곳에 중앙화하여 시간을 절약하고 문서화를 단순화할 수 있습니다. 마크다운 파일을 활용하는 대신, 개츠비와 [Docsie](https://www.docsie.io/)는 함께 웹사이트와 문서의 효율적인 개발을 가능하게 합니다.\n\n이 블로그에서 언급된 효율적이고 유용한 개츠비 플러그인은 많은 이점이 있습니다. 이러한 플러그인은 Docsie에서도 사용할 수 있습니다. [docsie를 통해 개츠비 문서를 생성](https://github.com/LikaloLLC/gatsby-source-docsie)하려면 이 링크를 클릭하세요.\n\n## 결론\n\n요약하자면, 개츠비 플러그인은 리액트 생태계와 자바스크립트 언어의 강력한 기능을 활용하여 개츠비 사이트를 사용자 정의하고 확장할 수 있는 광범위한 기능을 제공합니다. 반응형 이미지를 위한 gatsby-plugin-image, 웹 앱 매니페스트를 위한 gatsby-plugin-manifest, CSS-in-JS 스타일링을 위한 gatsby-plugin-styled-components와 같은 인기 있는 플러그인은 플러그인을 통해 개발자가 현대적인 웹 기능을 쉽게 통합할 수 있음을 보여줍니다. 활발한 개츠비 플러그인 커뮤니티는 많은 일반적인 웹 개발 작업에 이미 사용 가능한 플러그인이 있을 가능성이 높음을 의미합니다. 개츠비 플러그인을 활용하는 방법을 배우면 개츠비로 구축하는 진정한 잠재력과 생산성이 발휘됩니다. 사용 사례에 맞게 선택된 적절한 플러그인 세트를 통해 필요에 맞게 정확히 맞춤화된 번개처럼 빠른 현대적인 웹사이트를 만들 수 있습니다.\n\n## 주요 요점\n\n* 개츠비의 플러그인 생태계는 속도와 다양성을 높여 개발자가 쉽게 새로운 기능을 추가하고 기존 기능을 수정할 수 있습니다.\n\n* gatsby-plugin-image 및 gatsby-plugin-sharp와 같은 플러그인은 반응형 디자인을 위한 이미지를 개선하여 웹사이트 속도를 향상시킵니다.\n\n* gatsby-plugin-offline는 서비스 워커를 사용하여 네트워크 연결이 없을 때도 사용 가능한 오프라인 페이지를 생성하여 사용자 경험을 개선할 수 있습니다.\n\n* gatsby-plugin-react-helmet은 문서 헤드의 메타데이터를 관리하여 검색 엔진 최적화 및 소셜 미디어 공유에 적합하게 만듭니다.\n\n* gatsby-plugin-sitemap은 검색 엔진의 크롤링 및 인덱싱을 개선하기 위한 XML 사이트맵을 생성합니다.\n\n* gatsby-plugin-styled-components는 최고의 성능으로 컴포넌트 범위의 CSS를 용이하게 하기 위해 styled-components를 통합합니다.\n\n* gatsby-theme-docz는 개발자가 MDX와 React 컴포넌트를 사용하여 기술 문서 웹페이지를 만들 수 있게 합니다.\n\n* 개츠비 플러그인은 테마부터 컴포넌트 섀도잉까지 다양한 구성 옵션을 제공하여 프레임워크가 다양한 요구 사항에 적응할 수 있게 합니다.\n\n* 활발한 개츠비 플러그인 커뮤니티가 만든 다양한 플러그인은 웹사이트 구축 과정을 간소화하고 단순화합니다.\n\n* 개츠비 플러그인을 통해 개발자는 현대적인 웹 기능을 쉽게 통합하여 속도에 최적화된 맞춤형 웹사이트를 만들 수 있습니다.\n\n## 자주 묻는 질문\n\n**Q.1 개츠비에서 gatsby-plugin-sharp 이미지 최적화 도구를 어떻게 사용할 수 있나요?**\n\ngatsby-plugin-sharp는 Sharp 라이브러리를 사용합니다. 크기 조정, 자르기, 형식 변경, 워터마크 추가 등을 할 수 있습니다. gatsby-config.js에서 구성한 후 GraphQL 쿼리를 통해 빌드 프로세스 중에 이미지를 처리할 수 있습니다.\n\n**Q2. 개츠비 사용 시 Google Analytics 추적 코드를 어떻게 추가하나요?**\n\n개츠비 사이트에 Google Analytics 모니터링을 통합하려면 gatsby-plugin-google-analytics가 최선의 방법입니다. gatsby-config.js를 편집하고 추적 ID를 포함하여 사용자 활동 추적 및 모니터링을 시작하세요.\n\n**Q3. gatsby-theme-docz 문서 웹사이트 템플릿을 어떻게 활용할 수 있나요?**\n\ngatsby-theme-docz는 MDX와 React 컴포넌트를 사용하여 문서 웹페이지를 만들기 위한 공식 개츠비 테마입니다. 테마를 설치하고, src/pages 디렉토리에 MDX 페이지를 만들고, 테마를 수정하여 유연하고 포괄적인 문서를 제공하세요.\n\n**Q4. gatsby-plugin-sitemap을 사용하여 XML 사이트맵을 생성하는 방법은?**\n\ngatsby-plugin-sitemap은 SEO 목적으로 XML 사이트맵을 생성하는 데 도움을 줍니다. 플러그인을 설치하고 gatsby-config.js에서 설정을 조정한 후, 개츠비 노드에서 생성된 페이지로부터 포괄적인 사이트맵이 자동으로 구축됩니다.\n\n**Q5. 개츠비 플러그인에는 어떤 것이 있으며, 사이트를 개선하고 확장하는 데 어떻게 사용할 수 있나요?**\n\n개츠비 플러그인은 이미지 최적화, 데이터 관리, 오프라인 지원 등 다양한 기능을 제공합니다. 적절한 도구와 설정 조정을 통해 빠르고 안정적인 웹사이트를 만들 수 있습니다.\n\n**Q6. 개츠비의 플러그인 커뮤니티는 웹사이트 디자인 및 구축의 미래에 어떤 의미가 있나요?**\n\n개츠비의 방대한 플러그인 커뮤니티는 개발자가 많은 노력 없이 최신 웹 기능을 사이트에 추가할 수 있게 해줍니다.",
    "12-amazing-plugins-for-gatsby-js-for-202|category|0": "기술 문서 작성",
    "12-amazing-plugins-for-gatsby-js-for-202|category|1": "개츠비 확장 프로그램"
}